pipeline {
    agent any
    tools {
     maven 'mvn-local'
    }
    stages {
        stage("Scan"){
            steps{
                withSonarQubeEnv('sonar-scanner') {
                    sh 'mvn clean package sonar:sonar'
                }
            }
        }
        stage("Quality Gate") {
        steps {
           timeout(time: 1, unit: 'HOURS') {
             waitForQualityGate abortPipeline: true
            }
          }
        }
        stage('Tests, generate jar and Upload to Artifactory') {
            steps {
                sh 'mvn clean install deploy'
            }
        }
        stage('Docker Build') {
            steps {
              sh 'docker build -t drexxcbba/docker-petclinic-demo:latest .'
            }
       }
       stage('Docker Push') {
            steps {
             withCredentials([usernamePassword(credentialsId: 'docker-hub', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
                sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPassword}"
                sh 'docker push drexxcbba/docker-petclinic-demo:latest'
             }
           }
       }
    }
}
